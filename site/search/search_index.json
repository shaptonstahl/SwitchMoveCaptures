{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documentation \u2014 SwitchMoveCaptures","text":"<p>This folder contains the user-facing documentation for SwitchMoveCaptures (usage, automation, webhooks, and configuration). The repository root <code>README.md</code> contains the project overview, license, and release artifacts; this <code>docs/</code> folder is the user manual.</p>"},{"location":"#quick-start","title":"Quick start","text":"<ul> <li>Preview a page in VS Code: open the file and press Ctrl+Shift+V (or right-click \u2192 Open Preview).</li> <li>To run the GUI locally for testing:</li> </ul> <pre><code>powershell.exe -NoProfile -ExecutionPolicy Bypass -File .\\scripts\\SwitchMoveCapturesGUI.ps1\n</code></pre>"},{"location":"#important-pages","title":"Important pages","text":"<ul> <li>Script configuration</li> <li>Automatically run on USB connect</li> <li>Connect Switch via USB</li> <li>Webhook examples: Discord, Slack, Google Chat, Teams, SMS gateway</li> </ul>"},{"location":"#notes","title":"Notes","text":"<ul> <li>These files are the canonical English documentation for the project. Localized copies were archived to <code>docs/_locales_backup/</code>.</li> <li>If you need to reference general project metadata (license, installer, changelog), see the repository root: Project README</li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<ul> <li>Edit the Markdown files in this folder. Keep links relative (e.g., <code>ScriptConfiguration.md</code>) so they render correctly on GitHub.</li> <li>Place images and assets under <code>docs/images/</code> and reference them as <code>images/diagram.png</code>.</li> </ul>"},{"location":"#want-this-to-be-a-website","title":"Want this to be a website?","text":"<ul> <li>If you plan to publish the docs (GitHub Pages, Docsify, MkDocs), I can add a small <code>mkdocs.yml</code> or Docsify index and a build script.</li> </ul> <p>Last updated: September 28, 2025.</p>"},{"location":"AutoRunOnUSB/","title":"Automatically Run PowerShell Script When a USB Drive Connects on Windows","text":"<p>This guide explains how to configure Windows to automatically run the SwitchMoveCaptures PowerShell script when your Nintendo Switch (or any USB drive) is connected.</p> <p>Note: These instructions are current as of July 4, 2025. Windows features and settings may change, so refer to official Microsoft documentation for the latest information.</p>"},{"location":"AutoRunOnUSB/#1-open-task-scheduler","title":"1. Open Task Scheduler","text":"<ul> <li>Press <code>Win + S</code> and search for Task Scheduler. Open it.</li> </ul>"},{"location":"AutoRunOnUSB/#2-create-a-new-task","title":"2. Create a New Task","text":"<ul> <li>In the right pane, click Create Task.</li> </ul>"},{"location":"AutoRunOnUSB/#3-general-tab","title":"3. General Tab","text":"<ul> <li>Name your task (e.g., \"Run SwitchMoveCaptures on USB Connect\").</li> <li>Set it to run with highest privileges.</li> </ul>"},{"location":"AutoRunOnUSB/#4-triggers-tab","title":"4. Triggers Tab","text":"<ul> <li>Click New...</li> <li>Set Begin the task to On an event.</li> <li>Set Log to <code>Microsoft-Windows-DriverFrameworks-UserMode/Operational</code>.</li> <li>Set Source to <code>UserModeDriverFrameworks-UserMode</code>.</li> <li>Set Event ID to <code>2003</code> (this event is triggered when a device is connected).</li> <li>Click OK.</li> </ul>"},{"location":"AutoRunOnUSB/#5-actions-tab","title":"5. Actions Tab","text":"<ul> <li>Click New...</li> <li>Set Action to Start a program.</li> <li>In Program/script, enter:   <code>powershell.exe</code></li> <li>In Add arguments (optional), enter:   <code>-ExecutionPolicy Bypass -File \"C:\\Path\\To\\SwitchMoveCaptures\\scripts\\SwitchMoveCaptures.ps1\"</code></li> <li>Click OK.</li> </ul>"},{"location":"AutoRunOnUSB/#6-conditions-and-settings","title":"6. Conditions and Settings","text":"<ul> <li>Adjust conditions as needed (for example, only run if the user is logged on).</li> </ul>"},{"location":"AutoRunOnUSB/#7-save-the-task","title":"7. Save the Task","text":"<ul> <li>Click OK to save the task.</li> </ul>"},{"location":"AutoRunOnUSB/#notes","title":"Notes","text":"<ul> <li>You may need to adjust execution policy or script permissions to allow the script to run. Running the task as a user with appropriate permissions and using <code>-ExecutionPolicy Bypass</code> in the action usually resolves this.</li> <li>This trigger will fire for any USB device. The <code>SwitchMoveCaptures</code> script supports filtering by device serial and label; configure the device list in the GUI or the device YAML before enabling automation.</li> <li>For configuration details (organizing by game, filtering screenshots/videos, deduplication), see ScriptConfiguration.md.</li> <li>Tip: Run and test the script manually (or with the GUI <code>SwitchMoveCapturesGUI.ps1</code>) to confirm behavior before attaching it to an automated task.</li> </ul>"},{"location":"AutoRunOnUSB/#references","title":"References","text":"<ul> <li>Microsoft Docs: Task Scheduler</li> <li>Event ID 2003 Reference</li> </ul> <p>These instructions are current as of July 4, 2025.</p>"},{"location":"ConnectSwitchViaUSB/","title":"How to Connect Your Nintendo Switch to a PC via USB Cable","text":"<p>This guide explains how to connect your Nintendo Switch directly to your Windows PC using a USB cable to transfer screenshots and videos.</p> <p>Note: These instructions are current as of Nintendo's official documentation (accessed July 4, 2025). Please refer to the official Nintendo support site for the latest updates.</p> <p>Tip: After connecting your Switch, you can use the GUI (<code>SwitchMoveCapturesGUI.ps1</code>) to import captures and manage your configuration easily.</p>"},{"location":"ConnectSwitchViaUSB/#step-by-step-instructions","title":"Step-by-Step Instructions","text":""},{"location":"ConnectSwitchViaUSB/#1-prepare-your-equipment","title":"1. Prepare Your Equipment","text":"<ul> <li>You will need a USB-C cable (the same type used to charge the Nintendo Switch).</li> <li>Make sure your Nintendo Switch is powered on.</li> </ul>"},{"location":"ConnectSwitchViaUSB/#2-connect-the-switch-to-your-pc","title":"2. Connect the Switch to Your PC","text":"<ul> <li>Plug one end of the USB-C cable into the Nintendo Switch console.</li> <li>Plug the other end into a USB port on your Windows PC.</li> </ul>"},{"location":"ConnectSwitchViaUSB/#3-enable-data-transfer-mode-on-the-switch","title":"3. Enable Data Transfer Mode on the Switch","text":"<ol> <li>On your Nintendo Switch, go to the Home menu.</li> <li>Select Album to open your screenshots and videos.</li> <li>Press the A button to open the options menu.</li> <li>Select Copy to a Computer via USB Connection.</li> <li>The Switch will display a message indicating it is connected to the computer.</li> </ol>"},{"location":"ConnectSwitchViaUSB/#4-access-the-switch-storage-on-your-pc","title":"4. Access the Switch Storage on Your PC","text":"<ul> <li>On your Windows PC, open File Explorer.</li> <li>You should see a new device (\"Nintendo Switch\" or similar) listed under \"This PC\".</li> <li>Open the device to access the Nintendo/Album folder, where your screenshots and videos are stored.</li> </ul>"},{"location":"ConnectSwitchViaUSB/#reference","title":"Reference","text":"<ul> <li>Nintendo: How to Transfer Screenshots and Videos from Nintendo Switch to a Computer</li> </ul> <p>These instructions are current as of July 4, 2025, based on the official Nintendo documentation linked above.</p>"},{"location":"DiscordWebhook/","title":"How to Create a Discord Webhook","text":"<p>Tip: You can now configure Discord notifications directly from the GUI (<code>SwitchMoveCapturesGUI.ps1</code>).</p> <p>This guide explains how to create a Discord webhook for use with the SwitchMoveCaptures notification system.</p> <p>Note: These instructions are current as of July 4, 2025. Refer to the official Discord documentation for updates.</p>"},{"location":"DiscordWebhook/#step-by-step-instructions","title":"Step-by-Step Instructions","text":"<ol> <li>Open Discord and go to your server.</li> <li>Click the gear icon next to the channel where you want notifications.</li> <li>Select Integrations &gt; Webhooks &gt; New Webhook.</li> <li>Name your webhook (e.g., \"SwitchMoveCaptures Bot\").</li> <li>Optionally, set an avatar.</li> <li>Copy the Webhook URL.</li> <li>Paste this URL into your <code>SwitchMoveCaptures.ps1</code> configuration as the value for <code>$discordWebhookUrl</code>.</li> </ol>"},{"location":"DiscordWebhook/#reference","title":"Reference","text":"<ul> <li>Discord Webhooks Documentation</li> </ul> <p>These instructions are current as of July 4, 2025.</p>"},{"location":"GoogleChatWebhook/","title":"How to Create a Google Chat Webhook","text":"<p>Tip: You can now configure Google Chat notifications directly from the GUI (<code>SwitchMoveCapturesGUI.ps1</code>).</p> <p>This guide explains how to create a Google Chat webhook for use with the SwitchMoveCaptures notification system.</p> <p>Note: These instructions are current as of Google's documentation on incoming webhooks (accessed July 4, 2025). Please refer to the official documentation for the latest updates.</p>"},{"location":"GoogleChatWebhook/#step-by-step-instructions","title":"Step-by-Step Instructions","text":""},{"location":"GoogleChatWebhook/#1-open-google-chat","title":"1. Open Google Chat","text":"<ul> <li>Go to Google Chat and sign in with your Google account.</li> </ul>"},{"location":"GoogleChatWebhook/#2-select-or-create-a-space","title":"2. Select or Create a Space","text":"<ul> <li>In the left sidebar, select the space (room) where you want to receive notifications.</li> <li>If you don\u2019t have a space, click the \"+\" button next to \"Spaces\" and create a new one.</li> </ul>"},{"location":"GoogleChatWebhook/#3-manage-webhooks","title":"3. Manage Webhooks","text":"<ul> <li>In the space, click the space name at the top.</li> <li>Select Manage webhooks from the dropdown menu.</li> </ul>"},{"location":"GoogleChatWebhook/#4-add-an-incoming-webhook","title":"4. Add an Incoming Webhook","text":"<ul> <li>Click Add webhook.</li> <li>Enter a name for your webhook (e.g., \"SwitchMoveCaptures Notifications\").</li> <li>Optionally, add an avatar URL for the bot.</li> <li>Click Save.</li> </ul>"},{"location":"GoogleChatWebhook/#5-copy-the-webhook-url","title":"5. Copy the Webhook URL","text":"<ul> <li>After saving, a webhook URL will be generated.</li> <li>Copy this URL. You will need to paste it into your <code>SwitchMoveCaptures.ps1</code> configuration as the value for <code>$googleChatWebhookUrl</code>.</li> </ul>"},{"location":"GoogleChatWebhook/#reference","title":"Reference","text":"<ul> <li>Google Chat Webhooks Documentation</li> </ul> <p>These instructions are current as of July 4, 2025, based on the official Google documentation linked above.</p>"},{"location":"ScriptConfiguration/","title":"SwitchMoveCaptures PowerShell Script Configuration Guide","text":"<p>This guide explains how to configure the settings in the <code>SwitchMoveCaptures.ps1</code> script. Each configuration option is documented below with a description and example.</p>"},{"location":"ScriptConfiguration/#gui-configuration-recommended","title":"GUI Configuration (Recommended)","text":"<p>Most users should use the GUI (<code>SwitchMoveCapturesGUI.ps1</code>) to configure all options, manage devices, and set up notifications. The GUI writes settings directly to the script and device config file, and is the easiest way to keep your setup up-to-date.</p>"},{"location":"ScriptConfiguration/#configuration-outline","title":"Configuration Outline","text":"<ul> <li>Discord Webhook</li> <li>Slack Webhook</li> <li>Microsoft Teams Webhook</li> <li>SMS via Email-to-SMS Gateway</li> </ul> <ul> <li>Base Destination Folder (<code>$baseDestination</code>)</li> <li>Log Folder (<code>$logFolder</code>)</li> <li>Delete After Copy (<code>$deleteAfterCopy</code>)</li> <li>Max Log Files (<code>$maxLogFiles</code>)</li> <li>Organize by Game (<code>$organizeByGame</code>)</li> <li>Device Selection (<code>$allowAllSwitchDevices</code>, <code>$allowedSwitchDevices</code>)</li> <li>Google Chat Webhook (<code>$enableGoogleChatNotification</code>, <code>$googleChatWebhookUrl</code>)</li> <li>Email Notification Settings (<code>$enableEmailNotification</code>, <code>$smtpServer</code>, <code>$smtpPort</code>, <code>$smtpUser</code>, <code>$smtpPassword</code>, <code>$emailFrom</code>, <code>$emailTo</code>, <code>$emailSubject</code>)</li> </ul>"},{"location":"ScriptConfiguration/#base-destination-folder-basedestination","title":"Base Destination Folder (<code>$baseDestination</code>)","text":"<p>Description: The root folder where captures from your Switch will be saved. Each device will have its own subfolder.</p> <p>Example:</p> <pre><code>$baseDestination = \"C:\\Users\\YourName\\Pictures\\SwitchCaptures\"\n</code></pre>"},{"location":"ScriptConfiguration/#log-folder-logfolder","title":"Log Folder (<code>$logFolder</code>)","text":"<p>Description: The folder where log files will be stored.</p> <p>Example:</p> <pre><code>$logFolder = \"C:\\Users\\YourName\\Pictures\\SwitchImportLogs\"\n</code></pre>"},{"location":"ScriptConfiguration/#delete-after-copy-deleteaftercopy","title":"Delete After Copy (<code>$deleteAfterCopy</code>)","text":"<p>Description: If set to <code>$true</code>, files will be deleted from the Switch after being copied to your PC. If <code>$false</code>, files will remain on the Switch.</p> <p>Example:</p> <pre><code>$deleteAfterCopy = $true\n</code></pre>"},{"location":"ScriptConfiguration/#max-log-files-maxlogfiles","title":"Max Log Files (<code>$maxLogFiles</code>)","text":"<p>Description: The maximum number of log files to keep in the log folder. Older logs will be deleted automatically.</p> <p>Example:</p> <pre><code>$maxLogFiles = 30\n</code></pre>"},{"location":"ScriptConfiguration/#organize-by-game-organizebygame","title":"Organize by Game (<code>$organizeByGame</code>)","text":"<p>Description: If set to <code>$true</code>, files will be organized into subfolders by game title (based on the folder structure on the Switch). If <code>$false</code>, all files will be saved in the device folder only.</p> <p>Example:</p> <pre><code>$organizeByGame = $true\n</code></pre>"},{"location":"ScriptConfiguration/#device-management-allowedswitchdevicesyaml","title":"Device Management (AllowedSwitchDevices.yaml)","text":"<p>Description: Device management is handled via the <code>AllowedSwitchDevices.yaml</code> file. The recommended way to manage devices is through the GUI, which allows you to add, label, and remove devices visually. When a Nintendo device is detected, the script attempts to identify it by its SD card serial number. If the device is new, the user is prompted to provide a label (required, can include spaces and special characters) and to confirm whether to import files from the device. The label and serial are then stored in <code>AllowedSwitchDevices.yaml</code> for future use.</p> <p>How it works: - When a new device is detected, you must enter a non-empty label if you choose to import files. - The label is used as the folder name for storing captures from that device. - All managed devices are listed under the <code>Devices</code> section in <code>AllowedSwitchDevices.yaml</code>. - The GUI provides a tab for device management.</p> <p>Example AllowedSwitchDevices.yaml:</p> <pre><code># SwitchMoveCaptures External Configuration\n# This file is used to store device-specific settings, including SD card serial numbers and user-set labels.\nDevices:\n  - Serial: \"1234567890ABCDEF\"\n    Label: \"Steve's Main Switch\"\n  - Serial: \"0987654321FEDCBA\"\n    Label: \"Kids' Switch\"\n</code></pre> <p>Note: - There is no longer an option to allow all Switch devices or to specify allowed device names in the script. All device management is handled interactively and stored in the <code>AllowedSwitchDevices.yaml</code> file, and is best managed via the GUI.</p>"},{"location":"ScriptConfiguration/#google-chat-webhook-enablegooglechatnotification-googlechatwebhookurl","title":"Google Chat Webhook (<code>$enableGoogleChatNotification</code>, <code>$googleChatWebhookUrl</code>)","text":"<p>Description: - <code>$enableGoogleChatNotification</code>: If <code>$true</code>, notifications will be sent to Google Chat using the webhook URL. - <code>$googleChatWebhookUrl</code>: The webhook URL for your Google Chat space.</p> <p>Example:</p> <pre><code>$enableGoogleChatNotification = $true\n$googleChatWebhookUrl = \"https://chat.googleapis.com/v1/spaces/AAA.../messages?key=...\"\n</code></pre> <p>Tip: You can now configure Google Chat notifications directly from the GUI.</p>"},{"location":"ScriptConfiguration/#email-notification-settings-enableemailnotification-smtpserver-smtpport-smtpuser-smtppassword-emailfrom-emailto-emailsubject","title":"Email Notification Settings (<code>$enableEmailNotification</code>, <code>$smtpServer</code>, <code>$smtpPort</code>, <code>$smtpUser</code>, <code>$smtpPassword</code>, <code>$emailFrom</code>, <code>$emailTo</code>, <code>$emailSubject</code>)","text":"<p>Description: - <code>$enableEmailNotification</code>: If <code>$true</code>, notifications will be sent by email. - <code>$smtpServer</code>: The SMTP server address. - <code>$smtpPort</code>: The SMTP server port (usually 587 for TLS). - <code>$smtpUser</code>: The username for SMTP authentication. - <code>$smtpPassword</code>: The password for SMTP authentication. - <code>$emailFrom</code>: The sender's email address. - <code>$emailTo</code>: The recipient's email address. - <code>$emailSubject</code>: The subject line for notification emails.</p> <p>Example:</p> <pre><code>$enableEmailNotification = $true\n$smtpServer   = \"smtp.example.com\"\n$smtpPort     = 587\n$smtpUser     = \"your@email.com\"\n$smtpPassword = \"your_password\"\n$emailFrom    = \"your@email.com\"\n$emailTo      = \"recipient@email.com\"\n$emailSubject = \"Nintendo Switch Import Notification\"\n</code></pre> <p>Tip: You can now configure all email and SMS notification settings directly from the GUI.</p> <p>These instructions are current as of July 4, 2025. The GUI is the recommended way to configure all options for most users.</p>"},{"location":"ScriptConfiguration/#additional-feature-deduplication-by-file-hash","title":"Additional Feature: Deduplication by File Hash","text":"<p>Description: The script automatically checks for duplicate files using SHA256 hashes. If a file with the same content already exists in the destination (even if the filename is different), it will be skipped and not copied again. This helps prevent duplicate screenshots and videos from being imported.</p> <p>How it works: - Before copying, the script computes a hash for each file in the destination and compares it to the hash of each new file. - If a match is found, the file is skipped and a log entry is made.</p> <p>No configuration is needed for this feature; it is always enabled.</p>"},{"location":"SlackWebhook/","title":"How to Create a Slack Webhook","text":"<p>Tip: You can now configure Slack notifications directly from the GUI (<code>SwitchMoveCapturesGUI.ps1</code>).</p> <p>This guide explains how to create a Slack webhook for use with the SwitchMoveCaptures notification system.</p> <p>Note: These instructions are current as of July 4, 2025. Refer to the official Slack documentation for updates.</p>"},{"location":"SlackWebhook/#step-by-step-instructions","title":"Step-by-Step Instructions","text":"<ol> <li>Go to Slack API: Incoming Webhooks and sign in.</li> <li>Click Create an app and select From scratch.</li> <li>Name your app and select your workspace.</li> <li>Under Add features and functionality, select Incoming Webhooks.</li> <li>Activate Incoming Webhooks.</li> <li>Click Add New Webhook to Workspace and select the channel.</li> <li>Copy the generated Webhook URL.</li> <li>Paste this URL into your <code>SwitchMoveCaptures.ps1</code> configuration as the value for <code>$slackWebhookUrl</code>.</li> </ol>"},{"location":"SlackWebhook/#reference","title":"Reference","text":"<ul> <li>Slack Webhooks Documentation</li> </ul> <p>These instructions are current as of July 4, 2025.</p>"},{"location":"SmsGateway/","title":"How to Send SMS Notifications via Email-to-SMS Gateway","text":"<p>Tip: You can now configure SMS notifications directly from the GUI (<code>SwitchMoveCapturesGUI.ps1</code>).</p> <p>This guide explains how to configure SMS notifications using your carrier's email-to-SMS gateway with the SwitchMoveCaptures notification system.</p> <p>Note: These instructions are current as of July 4, 2025. Check with your carrier for the latest gateway addresses and requirements.</p>"},{"location":"SmsGateway/#step-by-step-instructions","title":"Step-by-Step Instructions","text":"<ol> <li>Find your carrier's email-to-SMS gateway address. Common examples:</li> <li>AT&amp;T: <code>number@txt.att.net</code></li> <li>Verizon: <code>number@vtext.com</code></li> <li>T-Mobile: <code>number@tmomail.net</code></li> <li>(Check your carrier's website for details)</li> <li>In your <code>SwitchMoveCaptures.ps1</code> configuration, set:</li> <li><code>$enableSmsNotification = $true</code></li> <li><code>$smsTo = \"1234567890@txt.att.net\"</code> (replace with your number and carrier)</li> <li><code>$smsFrom = \"your@email.com\"</code></li> <li>Make sure your SMTP settings are correct and allow sending to external addresses.</li> </ol>"},{"location":"SmsGateway/#reference","title":"Reference","text":"<ul> <li>Wikipedia: List of SMS Gateways</li> </ul> <p>These instructions are current as of July 4, 2025.</p>"},{"location":"TeamsWebhook/","title":"How to Create a Microsoft Teams Webhook","text":"<p>Tip: You can now configure Microsoft Teams notifications directly from the GUI (<code>SwitchMoveCapturesGUI.ps1</code>).</p> <p>This guide explains how to create a Microsoft Teams webhook for use with the SwitchMoveCaptures notification system.</p> <p>Note: These instructions are current as of July 4, 2025. Refer to the official Microsoft documentation for updates.</p>"},{"location":"TeamsWebhook/#step-by-step-instructions","title":"Step-by-Step Instructions","text":"<ol> <li>Open Microsoft Teams and go to the channel where you want notifications.</li> <li>Click the three dots (...) next to the channel name and select Connectors.</li> <li>Find and add the Incoming Webhook connector.</li> <li>Name your webhook (e.g., \"SwitchMoveCaptures Bot\").</li> <li>Optionally, set an image.</li> <li>Copy the Webhook URL.</li> <li>Paste this URL into your <code>SwitchMoveCaptures.ps1</code> configuration as the value for <code>$teamsWebhookUrl</code>.</li> </ol>"},{"location":"TeamsWebhook/#reference","title":"Reference","text":"<ul> <li>Microsoft Teams Webhooks Documentation</li> </ul> <p>These instructions are current as of July 4, 2025.</p>"}]}